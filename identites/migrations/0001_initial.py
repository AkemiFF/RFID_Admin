# Generated by Django 4.2 on 2025-05-28 10:43

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('raison_sociale', models.CharField(max_length=255)),
                ('forme_juridique', models.CharField(max_length=100)),
                ('stat', models.CharField(max_length=14, unique=True)),
                ('nif', models.CharField(max_length=9, unique=True)),
                ('tva_intracom', models.CharField(blank=True, max_length=20)),
                ('telephone', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('adresse_siege', models.TextField()),
                ('date_creation_entreprise', models.DateField()),
                ('secteur_activite', models.CharField(max_length=255)),
                ('numero_rcs', models.CharField(blank=True, max_length=50)),
                ('statut', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDUE', 'Suspendue')], default='ACTIVE', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('cree_par', models.UUIDField(blank=True, null=True)),
                ('modifie_par', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Entreprise',
                'verbose_name_plural': 'Entreprises',
                'db_table': 'entreprises',
            },
        ),
        migrations.CreateModel(
            name='Personne',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=255)),
                ('nationalite', models.CharField(max_length=100)),
                ('profession', models.CharField(blank=True, max_length=255)),
                ('type_piece', models.CharField(choices=[('CNI', "Carte Nationale d'Identité"), ('PASSEPORT', 'Passeport'), ('PERMIS', 'Permis de Conduire')], max_length=20)),
                ('numero_piece', models.CharField(max_length=100, unique=True)),
                ('telephone', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('adresse', models.TextField(blank=True)),
                ('statut', models.CharField(choices=[('ACTIF', 'Actif'), ('INACTIF', 'Inactif'), ('SUSPENDU', 'Suspendu')], default='ACTIF', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('cree_par', models.UUIDField(blank=True, null=True)),
                ('modifie_par', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Personne',
                'verbose_name_plural': 'Personnes',
                'db_table': 'personnes',
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrateur'), ('OPERATEUR', 'Opérateur'), ('AGENT', 'Agent'), ('SUPERVISEUR', 'Superviseur')], max_length=50)),
                ('region_assignee', models.CharField(blank=True, max_length=100)),
                ('permissions_speciales', models.JSONField(blank=True, default=dict)),
                ('actif', models.BooleanField(default=True)),
                ('force_changement_mdp', models.BooleanField(default=False)),
                ('derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('tentatives_connexion_echouees', models.IntegerField(default=0)),
                ('compte_verrouille_jusqu', models.DateTimeField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_expiration', models.DateTimeField(blank=True, null=True)),
                ('cree_par', models.UUIDField(blank=True, null=True)),
                ('entreprise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='identites.entreprise')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('personne', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='identites.personne')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'db_table': 'utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
