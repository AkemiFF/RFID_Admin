# Generated by Django 5.1.4 on 2025-05-28 16:05

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('resource_type', models.CharField(choices=[('CARTES', 'Cartes'), ('TRANSACTIONS', 'Transactions'), ('IDENTITES', 'Identités'), ('DOCUMENTS', 'Documents'), ('LOGS', 'Logs'), ('NOTIFICATIONS', 'Notifications'), ('PARAMETRES', 'Paramètres'), ('API_MANAGEMENT', 'Gestion API'), ('RAPPORTS', 'Rapports'), ('SYSTEM', 'Système')], max_length=20)),
                ('action_type', models.CharField(choices=[('CREATE', 'Créer'), ('READ', 'Lire'), ('UPDATE', 'Modifier'), ('DELETE', 'Supprimer'), ('EXPORT', 'Exporter'), ('IMPORT', 'Importer'), ('APPROVE', 'Approuver'), ('REJECT', 'Rejeter'), ('BLOCK', 'Bloquer'), ('UNBLOCK', 'Débloquer')], max_length=20)),
                ('conditions', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
                'db_table': 'auth_permissions',
                'unique_together': {('resource_type', 'action_type')},
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_system_role', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles_crees', to=settings.AUTH_USER_MODEL)),
                ('permissions', models.ManyToManyField(blank=True, to='authentication.permission')),
            ],
            options={
                'verbose_name': 'Rôle',
                'verbose_name_plural': 'Rôles',
                'db_table': 'auth_roles',
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150)),
                ('attempt_type', models.CharField(choices=[('SUCCESS', 'Succès'), ('FAILED_PASSWORD', 'Mot de passe incorrect'), ('FAILED_USER', 'Utilisateur inexistant'), ('BLOCKED', 'Compte bloqué'), ('EXPIRED', 'Compte expiré')], max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('additional_info', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tentative de connexion',
                'verbose_name_plural': 'Tentatives de connexion',
                'db_table': 'auth_login_attempts',
                'indexes': [models.Index(fields=['username', 'timestamp'], name='auth_login__usernam_99e401_idx'), models.Index(fields=['ip_address', 'timestamp'], name='auth_login__ip_addr_fe98a7_idx'), models.Index(fields=['attempt_type', 'timestamp'], name='auth_login__attempt_2a2191_idx')],
            },
        ),
        migrations.CreateModel(
            name='RefreshToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_blacklisted', models.BooleanField(default=False)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refresh_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Refresh Token',
                'verbose_name_plural': 'Refresh Tokens',
                'db_table': 'auth_refresh_tokens',
                'indexes': [models.Index(fields=['user', 'is_blacklisted'], name='auth_refres_user_id_895278_idx'), models.Index(fields=['expires_at'], name='auth_refres_expires_4ad26b_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('context', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rôle utilisateur',
                'verbose_name_plural': 'Rôles utilisateurs',
                'db_table': 'auth_user_roles',
                'unique_together': {('user', 'role')},
            },
        ),
    ]
